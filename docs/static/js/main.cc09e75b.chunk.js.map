{"version":3,"sources":["components/AddCategories.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","id","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifts","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMA+CeA,EA3Cc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAwBhD,OAEI,0BAAMC,SAhBW,SAAEC,GAEnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAe,OAUf,2BACGO,KAAK,OACLC,MAAQT,EACRU,SA1Bc,SAAEP,GAEvBF,EAAeE,EAAEQ,OAAOF,YCRnBG,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAWC,GAAS,EAAbC,GAAa,EAATD,KAIrC,OACI,yBAAKE,UAAU,4BACX,yBAAKC,IAAMH,EAAMI,IAAML,IACvB,+BAAKA,EAAL,O,uBCNCM,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbP,EAFa,iDAEoCQ,UAAUF,GAF9C,+DAGAG,MAAOT,GAHP,cAGbU,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAQD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE3B,MAAO,CACHd,GAAIc,EAAId,GACRF,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIC,cAAN,aAAE,EAAYC,iBAAiBjB,QAVvB,kBAeZa,GAfY,4CAAH,sDCkCLK,EA/BC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECHN,SAAEA,GAAe,IAAD,EAEdrB,mBAAS,CAE/B2B,KAAM,GACNO,SAAS,IAL2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAdAC,qBAAW,WAEXjB,EAASC,GACJiB,MAAM,SAAAC,GACHC,YAAW,WACPJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAEf,UAGP,CAAEb,IAEEc,EDlBwBM,CAAcpB,GAAjCU,EAFkB,EAEvBJ,KAAaO,EAFU,EAEVA,QAEpB,OACI,oCACI,4BAAKb,GAEHa,GAAW,sCAEb,yBAAKjB,UAAU,aAEPc,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACCY,IAAMZ,EAAId,IACLc,UEkBfa,EAlCM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,cAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAUvB,OACI,yBAAKkB,UAAU,aACX,4CACA,kBAAC,EAAD,CAAelB,cAAgBA,IAC/B,6BAEA,4BAEQ6C,EAAWf,KAAK,SAAAR,GAAQ,OAEpB,kBAAC,EAAD,CACIqB,IAAKrB,EACLA,SAAWA,U,MCnBvCwB,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.cc09e75b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport const AddCategories = ( {setCategories} ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const hadleInputChange = ( e ) => {\n        \n        setInputValue( e.target.value );\n\n    };\n\n    const handleSubmit = ( e ) => {\n\n        e.preventDefault()\n\n        if( inputValue.trim().length > 2 ) {\n            \n            setCategories( cats => [ inputValue, ...cats ]);\n            setInputValue( '' );\n\n        }\n\n\n    };\n\n    return (\n\n        <form onSubmit={ handleSubmit }>\n            <input\n               type=\"text\"\n               value={ inputValue }\n               onChange={ hadleInputChange }\n            />\n        </form>\n\n    )\n}\n\nAddCategories.propTypes = {\n\n    setCategories: PropTypes.func.isRequired\n\n}\n\nexport default AddCategories;","import React from 'react'\n\nexport const GifGridItem = ( {title, id, url}) => {\n\n    // console.log( props )\n\n    return (\n        <div className=\"card animate__backInDown\">\n            <img src={ url } alt={ title } />\n            <p> {title} </p>\n        </div>\n    )\n}\n","\n\n\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=r26ldK7Q7UcgZtdh6VP6hkYv92ZHa6Ki`;\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n    const gifts = data.map( img => {\n\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n        \n    })\n    \n    return gifts;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n// import { getGifs } from '../helpers/getGifs';\n\nconst GifGrid = ( {category} ) => {\n\n    const {data:images, loading} = useFetchGifs( category );\n\n    return (\n        <>\n            <h3>{category}</h3>\n\n            { loading && <p>Loading</p> }\n\n            <div className=\"card-grid\">\n                {\n                    images.map( img => (\n                        <GifGridItem\n                         key={ img.id }\n                         { ...img }\n                         />\n                    ))\n                }\n\n            </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n\n    category: PropTypes.string.isRequired\n\n}\n\nexport default GifGrid;","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setstate] = useState({\n\n        data: [],\n        loading: true,\n\n    });\n\n    useEffect( () => {\n\n    getGifs( category )\n        .then( imgs => {\n            setTimeout(()=>{\n                setstate({\n                    data: imgs,\n                    loading: false\n                })\n            },3000)\n        })\n\n    }, [ category ])\n\n    return state;\n\n};","import React, { useState } from 'react';\nimport AddCategories from './components/AddCategories';\nimport GifGrid from './components/GifGrid';\n\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd = () => {\n    //     // Ambos metodos funcionan\n    //     // setCategories([...categories, 'Death note'])\n    //     // setCategories( cat => [...categories, 'Death note'])\n    // }\n\n    return (\n        <div className=\"container\">\n            <h2>GifExpertApp</h2>\n            <AddCategories setCategories={ setCategories }/>\n            <hr/>\n            \n            <ol>\n                {\n                    categories.map( category =>\n\n                        <GifGrid\n                            key={category} \n                            category={ category }\n                        />\n                        \n                    )\n                }\n            </ol>\n        </div>\n    )\n\n}\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}